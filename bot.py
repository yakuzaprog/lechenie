import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –¢–µ–∫—Å—Ç—ã –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤
ALCOHOL_INFO = """
üìñ *–ö–∞–∫ –ª–µ—á–∏—Ç—å –∞–ª–∫–æ–≥–æ–ª—å–Ω—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å*

–°—Ç–∞—Ç—å—è: [–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é](https://example.com)

üë• *–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤:*
- –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤ ‚Äî –Ω–∞—Ä–∫–æ–ª–æ–≥: +7 900 000‚Äë00‚Äë00
- –¶–µ–Ω—Ç—Ä –ø–æ–º–æ—â–∏ ¬´–ù–æ–≤–∞—è –∂–∏–∑–Ω—å¬ª: @newlife_center
"""

DRUG_INFO = """
üìñ *–ö–∞–∫ –ª–µ—á–∏—Ç—å –Ω–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å*

–°—Ç–∞—Ç—å—è: [–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é](https://example.com)

üë• *–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤:*
- –ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤ ‚Äî –ø—Å–∏—Ö–∏–∞—Ç—Ä-–Ω–∞—Ä–∫–æ–ª–æ–≥: +7 911 111‚Äë11‚Äë11
- –†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä ¬´–ü—É—Ç—å¬ª: @rehab_path
"""

CODEPENDENCY_INFO = """
üé• *–õ–µ–∫—Ü–∏–∏ –ø–æ —Ç–µ–º–µ —Å–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:*
1. [–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å](https://example.com/lecture1)
2. [–ö–∞–∫ –≤—ã–π—Ç–∏ –∏–∑ –∫—Ä—É–≥–∞](https://example.com/lecture2)

üë• *–ö–æ–Ω—Ç–∞–∫—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞:*
- –ú–∞—Ä–∏—è –°–º–∏—Ä–Ω–æ–≤–∞ ‚Äî —Å–µ–º–µ–π–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥: +7 922 222‚Äë22‚Äë22
- Telegram: @maria_psy
"""

GAMBLING_INFO = """
üéØ *–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –∏–≥—Ä–æ–≤–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é*

–°—Ç–∞—Ç—å—è: [–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ –ª—É–¥–æ–º–∞–Ω–∏–∏](https://example.com/gambling)

üë• *–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤:*
- –°–µ—Ä–≥–µ–π –ö—É–∑–Ω–µ—Ü–æ–≤ ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥ –ø–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º: +7 933 333‚Äë33‚Äë33
- Telegram: @sergey_gambling_help
"""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù_–ë–û–¢–ê"


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
    keyboard = [
        [InlineKeyboardButton("üç∫ –ê–ª–∫–æ–≥–æ–ª—å", callback_data='alcohol')],
        [InlineKeyboardButton("üíä –ù–∞—Ä–∫–æ—Ç–∏–∫–∏", callback_data='drugs')],
        [InlineKeyboardButton("ü§ù –°–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å", callback_data='codependency')],
        [InlineKeyboardButton("üé∞ –ò–≥—Ä–æ–≤–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å", callback_data='gambling')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –° —á–µ–º —Å–≤—è–∑–∞–Ω–∞ –≤–∞—à–∞ —Å–∏—Ç—É–∞—Ü–∏—è?\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:",
        reply_markup=reply_markup
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    if data == 'alcohol':
        await query.message.reply_text(
            ALCOHOL_INFO,
            parse_mode="Markdown",
            disable_web_page_preview=True
        )
    elif data == 'drugs':
        await query.message.reply_text(
            DRUG_INFO,
            parse_mode="Markdown",
            disable_web_page_preview=True
        )
    elif data == 'codependency':
        await query.message.reply_text(
            CODEPENDENCY_INFO,
            parse_mode="Markdown",
            disable_web_page_preview=True
        )
    elif data == 'gambling':
        await query.message.reply_text(
            GAMBLING_INFO,
            parse_mode="Markdown",
            disable_web_page_preview=True
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
async def back_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É –º–µ–Ω—é
    await start(update, context)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button))
    application.add_handler(CallbackQueryHandler(back_button, pattern='back'))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    application.run_polling()


if __name__ == '__main__':
    main()
